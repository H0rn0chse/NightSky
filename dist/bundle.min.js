/*
    @h0rn0chse/night-sky - dist/bundle.min.js
    version 2.0.0 - built at 2025-07-06
    @license MIT
*/
!function(){"use strict";const t=document.createElement("template");t.innerHTML="<style>#container{width:100%;height:100%;background:radial-gradient(ellipse at bottom,#1b2735 0,#090a0f 100%);overflow:hidden}#container.transparent{background:unset}.star{background:0 0}</style>";class e extends HTMLElement{static get observedAttributes(){return["layers","density","velocity-x","velocity-y","star-shape","star-color","background-color"]}connectedCallback(){this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(t.content.cloneNode(!0)),this._styles=document.createElement("style"),this.shadowRoot.appendChild(this._styles),this._container=document.createElement("div"),this._container.id="container",this.shadowRoot.appendChild(this._container),this.recalculateStyles(),this._observer=new ResizeObserver(this._handleResize.bind(this)),this._observer.observe(this._container)}_handleResize(){this._timer&&clearTimeout(this._timer),this._timer=setTimeout(()=>{this._timer=null,this.recalculateStyles()},200)}attributeChangedCallback(t,e,s){if(null!=s&&e!==s){switch(t){case"star-color":this.setAttribute(t,s);break;case"background-color":if(!["","transparent"].includes(s))throw new Error(`The color ${s} is not supported`);this.setAttribute(t,s);break;case"star-shape":["circle","square"].includes(s)?this.setAttribute(t,s):(console.error(`The star shape ${s} is not supported, defaulting to square`),this.setAttribute(t,"square"));break;case"layers":case"density":case"velocity-x":case"velocity-y":this.setAttribute(t,parseInt(s,10));break;default:throw new Error(`The property ${t} is not supported`)}this.shadowRoot&&this.recalculateStyles()}}getOptions(){const t={starColor:this.getAttribute("star-color")||"#FFF",layerCount:parseInt(this.getAttribute("layers"),10)||3,layers:[],density:parseInt(this.getAttribute("density"),10)||50,velocityX:parseInt(this.getAttribute("velocity-x")??"60",10),velocityY:parseInt(this.getAttribute("velocity-y")??"60",10),width:parseInt(this._container.clientWidth,10),height:parseInt(this._container.clientHeight,10),backgroundColor:this.getAttribute("background-color")??"",starShape:this.getAttribute("star-shape")||"square"};let e=t.width*t.height/2073600*t.density;for(let s=0;s<t.layerCount;s++){e*=2;const s=[];for(let r=0;r<e;r++){const e=Math.round(Math.random()*t.width),r=Math.round(Math.random()*t.height);s.push({x:e,y:r}),s.push({x:e+t.width,y:r+t.height}),s.push({x:e+t.width,y:r}),s.push({x:e,y:r+t.height})}t.layers.push(s)}return t.baseSpeedX=t.width*(1/Math.abs(t.velocityX)),t.baseSpeedY=t.height*(1/Math.abs(t.velocityY)),t}recalculateStyles(){const t=this.getOptions(),e=JSON.parse(JSON.stringify(t));if(delete e.layers,JSON.stringify(e)!==JSON.stringify(this._lastOptions)){this._lastOptions=e,this._styles.innerHTML=function(t){let e="";t.layers.forEach((s,r,n)=>{const i=t.layers.length-r,a=s.reduce((e,s,r,n)=>e+`${s.x}px ${s.y}px ${t.starColor}${r<n.length-1?",":""}\n`,"");e+=`\n        #star_${r} {\n            animation: animStar_x ${t.baseSpeedX*(r+1)}s linear infinite;\n            position: fixed;\n        }\n        #star_${r} .inner {\n            /*width: ${i}px;\n            height: ${i}px; */\n            /*box-shadow: ${a};*/\n            animation: animStar_y ${t.baseSpeedY*(r+1)}s linear infinite;\n            /* border-radius: ${"circle"===t.starShape?"50%":"0"}; */\n\n            width: 0;\n            height: 0;\n            border-left: ${4*i+10}px solid transparent;\n            border-right: ${4*i+10}px solid transparent;\n            border-bottom: ${4*i+10}px solid red;\n            position: relative;\n        }\n        `});let s=0,r=0,n=0,i=0;return t.velocityX>0?n=-t.width:t.velocityX<0&&(s=-t.width),t.velocityY>0?i=-t.height:t.velocityY<0&&(r=-t.height),e+=`\n    @keyframes animStar_x {\n        from {\n            transform: translateX(${s}px);\n        }\n        to {\n            transform: translateX(${n}px);\n        }\n    }\n    @keyframes animStar_y {\n        from {\n            transform: translateY(${r}px);\n        }\n        to {\n            transform: translateY(${i}px);\n        }\n    }\n    `,e}(t),this._container.querySelectorAll(".star").forEach(t=>{t.remove()}),this._container.classList.toggle("transparent","transparent"===t.backgroundColor);for(let e=0;e<t.layerCount;e++){const s=document.createElement("div");s.id=`star_${e}`,s.classList.add("star");const r=document.createElement("div");r.classList.add("star","inner"),t.layers.forEach(t=>{t.forEach(t=>{const e=r.cloneNode();e.style.left=`${t.x}px`,e.style.top=`${t.y}px`,s.appendChild(e)})}),s.appendChild(r),this._container.appendChild(s)}}}}window.customElements.define("night-sky",e)}();
