{"version":3,"file":"github-corner-element.es.js","sources":["../src/template.html?raw","../src/main.ts"],"sourcesContent":["export default \"<div style=\\\"display: none\\\">\\n  <slot name=\\\"svg\\\"></slot>\\n</div>\\n<a part=\\\"anchor\\\" class=\\\"link\\\" target=\\\"_blank\\\">\\n  <svg class=\\\"container\\\" viewBox=\\\"0 0 250 250\\\" aria-hidden=\\\"true\\\">\\n\\n    <path part=\\\"banner\\\" d=\\\"M 0.5 0 H 250 V 249.5 Z\\\"></path>\\n\\n    <g part=\\\"octocat\\\">\\n      <path part=\\\"octocat-arm\\\" style=\\\"transform-origin: 132px 106px;\\\"\\n        d=\\\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\\\">\\n      </path>\\n\\n      <path part=\\\"octocat-body\\\"\\n        d=\\\"M114.0,116.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 140.5,142.5 Z\\\">\\n      </path>\\n    </g>\\n  </svg>\\n</a>\"","import cssContent from './style.css?inline'\nimport templateContent from './template.html?raw'\n\nconst ELEMENT_NAME = 'github-corner'\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    [ELEMENT_NAME]: GithubCorner\n  }\n}\n\nconst ATTRIBUTES = [\n  'size',\n  'href',\n  'placement',\n  'banner-color',\n  'octocat-color',\n  'wave-duration',\n] as const\n\ntype Attributes = typeof ATTRIBUTES\n\nconst template = document.createElement('template')\ntemplate.innerHTML = templateContent\n\nconst PLACEMENT = ['top-right', 'top-left', 'bottom-right', 'bottom-left']\n\nconst DEFAULT_SIZE = '5rem'\nconst DEFAULT_BANNER_COLOR = 'black'\nconst DEFAULT_OCTOCAT_COLOR = 'white'\nconst DEFAULT_DURATION = '0.5s'\n\nclass GithubCorner extends HTMLElement {\n  #shadowRoot: ShadowRoot\n\n  #anchor: HTMLAnchorElement\n  #svgContainer: SVGElement\n  #banner: SVGPathElement\n  #octocat: SVGGElement\n  #octocatArm: SVGPathElement\n\n  #cloneNodes: Node[] = []\n\n  #status: 'init' | 'connected' | 'disconnected' = 'init'\n\n  constructor() {\n    super()\n\n    // Create a shadow root\n    this.#shadowRoot = this.attachShadow({ mode: 'open' })\n\n    const style = document.createElement('style')\n    style.textContent = cssContent\n\n    // attach the created elements to the shadow DOM\n    this.#shadowRoot.append(style, template.content.cloneNode(true))\n    this.#anchor = this.#shadowRoot.querySelector('a.link') as HTMLAnchorElement\n\n    this.#svgContainer = this.#shadowRoot.querySelector(\n      'svg.container'\n    ) as SVGElement\n\n    this.#banner = this.#shadowRoot.querySelector(\n      'path[part=banner]'\n    ) as SVGPathElement\n    this.#octocat = this.#shadowRoot.querySelector(\n      'g[part=octocat]'\n    ) as SVGGElement\n    this.#octocatArm = this.#shadowRoot.querySelector(\n      'path[part=octocat-arm]'\n    ) as SVGPathElement\n\n    const svgSlot = this.#shadowRoot.querySelector(\n      'slot[name=svg]'\n    ) as HTMLSlotElement\n\n    // clone svg nodes from svg slot to svg.container whenever svg slot changes\n    svgSlot.addEventListener('slotchange', () => {\n      this.#cloneNodes.forEach((n) => {\n        if (this.#svgContainer.contains(n)) {\n          this.#svgContainer.removeChild(n)\n        }\n      })\n\n      const svgNodes = svgSlot\n        .assignedNodes()\n        .filter((n) => n.nodeName === 'svg')\n      this.#cloneNodes = svgNodes.map((n) => n.cloneNode(true))\n      this.#cloneNodes.forEach((n) => this.#svgContainer.append(n))\n    })\n  }\n\n  #init() {\n    const size = this.getAttribute('size')\n    this.#setSize(size ? size : DEFAULT_SIZE)\n\n    if (!this.#banner.getAttribute('fill')) {\n      this.#banner.setAttribute('fill', DEFAULT_BANNER_COLOR)\n    }\n    if (!this.#octocat.getAttribute('fill')) {\n      this.#octocat.setAttribute('fill', DEFAULT_OCTOCAT_COLOR)\n    }\n\n    if (!this.#octocatArm.style.getPropertyValue('animation-duration')) {\n      this.#octocatArm.style.setProperty('animation-duration', DEFAULT_DURATION)\n    }\n\n    if (!this.getAttribute('placement')) {\n      this.setAttribute('placement', PLACEMENT[0])\n    }\n  }\n\n  #setSize(size: string) {\n    this.style.width = size\n    this.style.height = size\n  }\n\n  connectedCallback() {\n    if (this.#status === 'init') {\n      this.#init()\n    }\n    this.#status = 'connected'\n  }\n\n  disconnectedCallback() {\n    this.#status = 'disconnected'\n  }\n\n  static get observedAttributes(): Attributes {\n    return ATTRIBUTES\n  }\n\n  attributeChangedCallback(\n    attributeName: Attributes[number],\n    _: string,\n    newValue: string\n  ) {\n    switch (attributeName) {\n      case 'size':\n        this.#setSize(newValue)\n        break\n\n      case 'href':\n        this.#anchor.setAttribute('href', newValue)\n        break\n\n      case 'banner-color':\n        this.#banner.setAttribute('fill', newValue)\n        break\n\n      case 'octocat-color':\n        this.#octocat.setAttribute('fill', newValue)\n        break\n\n      case 'wave-duration':\n        this.#octocatArm.style.setProperty('animation-duration', newValue)\n        break\n\n      case 'placement':\n        if (!PLACEMENT.includes(newValue)) {\n          this.setAttribute('placement', PLACEMENT[0])\n          break\n        }\n    }\n  }\n}\n\ncustomElements.define(ELEMENT_NAME, GithubCorner)\n"],"names":["templateContent","ELEMENT_NAME","ATTRIBUTES","template","PLACEMENT","DEFAULT_SIZE","DEFAULT_BANNER_COLOR","DEFAULT_OCTOCAT_COLOR","DEFAULT_DURATION","GithubCorner","__privateAdd","_init","_setSize","_shadowRoot","_anchor","_svgContainer","_banner","_octocat","_octocatArm","_cloneNodes","_status","__privateSet","style","cssContent","__privateGet","svgSlot","n","svgNodes","__privateMethod","init_fn","attributeName","_","newValue","setSize_fn","size"],"mappings":"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"}